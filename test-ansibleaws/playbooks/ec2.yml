---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: webserver
      image: ami-3d299b59 #Ubuntu 16.04
      region: ca-central-1 # Region
      keypair: id_rsa_hussam # Keypair name
      count: 1
      zone: hussambutt.com
      record: test.hussambutt.com

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action:
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              #type: ssh
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              #type: all
              cidr_ip: 0.0.0.0/0

      - name: Launch the new EC2 Instance
        local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: add DNS record
        local_action:
          module: route53
          command: create
          zone: "{{ zone }}"
          record: "{{ record }}"
          type: A
          ttl: 300
          value: "{{ item.public_ip }}"
          overwrite: yes
          wait: yes
        with_items: "{{ ec2.instances }}"

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile
                      dest="../inventory/hosts"
                      regexp={{ item.public_dns_name }}
                      insertafter="[webserver]\n" line='{{ item.public_dns_name }} ansible_ssh_user=ubuntu' # ansible_python_interpreter=/usr/bin/python3'
        with_items: "{{ ec2.instances }}"

      # Allows for the hosts files to be refreshed so ansible roles can be executed later
      - name: Refresh inventory
        meta: refresh_inventory

      - name: Wait for SSH to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: webserver

  # Need to make sure a key pair on AWS already exists for the user deploying
  - name: Deploy the app
    hosts: webserver
    become: True
    become_user: root

    gather_facts: no
    pre_tasks:
      - name: 'install python2'
        raw: sudo apt-get -y install python

    roles:
      - base
      - mysql
      - app
      #- certbot
      - nginx
    vars_files:
        - env_vars/base.yml

